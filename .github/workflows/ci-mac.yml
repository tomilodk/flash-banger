name: Build and Publish Mac App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    permissions:
      contents: write  # Allow writing to the repository
      actions: read    # Allow reading actions (optional)
    env:
      ICON_OUTPUT_DIR: packaging/icon.iconset
    runs-on: macos-latest
    defaults:
      run:
        working-directory: electron-client
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install setuptools
      run: |
        python3 -m pip install --upgrade pip setuptools --break-system-packages

    - name: Install appdmg
      run: npm i -D appdmg

    - name: Install dependencies
      run: npm install

    - name: Set version
      run: |
        npx nbgv-setversion

    - name: Install ImageMagick
      run: brew install imagemagick

    - name: Generate Iconset
      run: |
        npm i -g ts-node
        ts-node scripts/generate-icon.ts mac

    - name: Create ICNS file
      run: iconutil -c icns ${{ env.ICON_OUTPUT_DIR }}
 
    - name: Download Developer Certificate
      run: |
        echo "${{ secrets.APPLE_DEVELOPER_CERTIFICATE }}" | base64 --decode > certificate.p12

    - name: Import Certificate into Keychain
      run: |
        security create-keychain -p password build.keychain
        security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security list-keychains -d user -s build.keychain
        security unlock-keychain -p password build.keychain
        security set-keychain-settings
        security set-key-partition-list -S apple-tool:,apple: -k password build.keychain
        security find-identity -v -p codesigning

    - name: Package Electron App ARM
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder,electron-osx-sign*
      run: |
        npm run publish -- --platform=darwin --arch=arm64

    - name: Package Electron App x64
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder,electron-osx-sign*
      run: |
        npm run publish -- --platform=darwin --arch=x64


